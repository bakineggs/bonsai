see https://gist.github.com/369171

# spawn new thread
Thread:              # node must be matched
  K::                # node must be matched, the :: means that children are ordered (default is unordered)
    -Spawn:          # node must be matched, the - means that this node will be removed
      *: S           # makes S a variable that is any kind of node (makes a variable because it's a matched node)
  Env: E
+Thread:             # node not matched against, the + means this node will be added
  K::
    *: S             # references the variable S (because it's inside a new node)
  Env: E

# purge a finished thread
-Thread:
  K:=               # the = means an exact match (not containing any unmatched nodes)

# thread rendezvous
Threads:=            # wait for all threads to finish or rendezvous
  Thread:*           # the * means that there can be any number of these nodes
    K::
      -Rendezvous:

# wait for another thread to finish
Thread:
  K::
    -Join:
      *: I
!Thread:             # this node must not match
  Id: I

# integer addition
K:                   # not ordered: may add 2 integers where ever
  -Plus:
    Integer: A
    Integer: B
  +Integer: < A + B  # the < means do a computation (with the ability to call user-defined functions)

# decimal addition
K:
  -Plus:
    Decimal: A
    Decimal: B
  +Decimal: < A + B

# mixed addition
K:
  -Plus:
    Integer: A
    Decimal: B
  +Decimal: < A + B

# remove an argument for evaluation (all args must start inside an "unevaluated" node)
K::
  +*: A
  +FollowedBy:
  Plus:
    -Unevaluated:
      *: A
    +Context:

# reinsert evaluated integer
K::
  -Integer: I
  -FollowedBy:
  Plus:
    -Context:
    +Integer: I

# reinsert evaluated decimal
K::
  -Decimal: A
  -FollowedBy:
  Plus:
    -Context:
    +Decimal: A